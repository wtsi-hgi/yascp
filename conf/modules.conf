
params{
    profile = 'normal_run' // #default run profile.you do not need to change this
    ////////////
    //Containers
    // QC container //
    yascp_container = "https://yascp.cog.sanger.ac.uk/public/singularity_images/yascp_qc_jan_2025.sif"
    yascp_container_docker = "mercury/yascp_qc:jan_2025"

    // Cellbender Containers
    nf_cellbender_container = "https://yascp.cog.sanger.ac.uk/public/singularity_images/wtsihgi_nf_cellbender_container_3cc9983-2021-12-14-5e3143ef9e66.sif"
    nf_cellbender_container_docker = "wtsihgi/nf_cellbender_container:3cc9983"
    nf_cellbender_container_032 = "https://yascp.cog.sanger.ac.uk/public/singularity_images/cellbender_07_08_2025.sif"
    nf_cellbender_container_032_docker = "mercury/cellbender:07_08_2025"  
        
    ////////////
}
process {
    cache = 'lenient'

    cpus   = {  1    * task.attempt }
    memory = {  4.GB * task.attempt }
    time   = { 4.h  * task.attempt }
    containerOptions = " --cleanenv --containall --bind /tmp"

    maxRetries    = 5
    maxErrors     = '-1'
    errorStrategy = 'retry'

    withLabel:process_tiny {
      cpus = 1
      maxRetries    = 5
      memory = 2.GB
      time   = {  3.h   * task.attempt }
    }

    withLabel: gpu {
        cpus = 1
        maxForks=8
        errorStrategy = 'retry'
        memory = 20.GB 
        time   = { 12.h   * task.attempt }
    }

    withLabel:process_low {
        maxRetries    = 3
        cpus   = { 1     * task.attempt }
        memory = { 12.GB * task.attempt }
        time   = {  4.h   * task.attempt }
    }
    withLabel:medium_cpus {
        cpus   = {  1    * task.attempt }
        memory = { 36.GB * task.attempt }
        time   = {  12.h   * task.attempt }
    }

    withLabel:process_medium {
        cpus   = {  1     * task.attempt }
        memory = { 10.GB * 2* task.attempt }
        time   = {  12.h   * task.attempt }
        maxRetries    = 3
    }

    withLabel:process_medium_single_CPU {
        cpus   = { 1     * task.attempt }
    }
    withLabel:many_cores_small_mem {
        cpus   = {  20     * task.attempt }
        memory = { 20.GB * task.attempt }
        time   = { 12.h   * task.attempt }
    }

    withName: CELLBENDER__RB__GET_INPUT_CELLS{
        memory = { 5.GB * task.attempt}
    }

    withName: SUBSET_GENOTYPE{
        memory = { 200.MB * task.attempt}
        cpus   = { 1     * task.attempt }
        time   = { 1.h   * task.attempt }
    }

    withName: BBKNN{
        cpus   = 1
        //# memory = { 36.GB * task.attempt }
        time   = 12.h
        maxRetries    = 3
    }

    withName: JOIN_INFERED_EXPECTED_MERGE{
        cpus   = 1
        //# memory = { 36.GB * task.attempt }
        memory = { 4.GB * task.attempt }
        time   = 12.h
        maxRetries    = 3
    }

    withName: ENHANCE_STATS_GT_MATCH{
        cpus   = 1
        //# memory = { 36.GB * task.attempt }
        memory = { 2.GB * task.attempt }
        time   = 12.h
        maxRetries    = 3
    }
    
    withName: ASSIGN_DONOR_FROM_PANEL{
        cpus   = 1
        //# memory = { 36.GB * task.attempt }
        memory = { 2.GB * task.attempt }
        time   = 6.h
        maxRetries    = 3
    }

    withName: DOUBLET_DECON{
        cpus   = 1
        memory = { 60.GB * task.attempt }
        time   = 12.h
        maxRetries    = 3
    }
    withName: DOUBLET_FINDER{
        cpus   = 1
        memory = { 36.GB * task.attempt }
        time   = 12.h
        maxRetries    = 3
    }
    withName: PREPROCESS_GENOTYPES{
        cpus   = 1
        time   = 12.h
        maxRetries    = 3
    }

    withName: HARMONY{
        cpus   = 1
        //# memory = { 36.GB * task.attempt }
        time   = 12.h
        maxRetries    = 3
    }

    withName: CELLTYPE_FILE_MERGE{
        memory = { 7.GB * task.attempt}
        cpus   = 1
        time   = { 1.h   * task.attempt }
    }

    withLabel:process_high {
        cpus   = {  1    * task.attempt }
        memory = { 100.GB * task.attempt }
        time   = 48.h
    }
    withLabel:process_long {
        time   = 48.h
        memory = { 36.GB * task.attempt }
        cpus   = { 1     * task.attempt }
    }
    withLabel:process_extralong {
        time   = 78.h
    }
    withLabel:process_high_memory {
        memory = { 150.GB * task.attempt}
        maxRetries    = 5
        time   = { 12.h   * task.attempt }
    }
    withLabel:process_medium_memory {
        memory = { 30.GB * task.attempt }
    }
    withName: ASSESS_CALL_RATE{
        maxRetries    = 3
        memory = { 10.GB * task.attempt }
        errorStrategy = { task.attempt > 2 ? 'ignore' : 'retry' }
    }

    withName: SCRUBLET{
        maxRetries    = 3
        errorStrategy = { task.attempt > 2 ? 'ignore' : 'retry' }
    }

    withName: AZIMUTH{
        maxRetries    = 3
        errorStrategy = { task.attempt > 2 ? 'ignore' : 'retry' }
    }
    withName: CELLTYPIST{
        maxRetries    = 3
        errorStrategy = { task.attempt > 2 ? 'ignore' : 'retry' }
    }

    withLabel:error_ignore {
        errorStrategy = 'ignore'
    }
    withLabel:error_retry {
        errorStrategy = 'retry'
        maxRetries    = 2
    }

    withName:CLUSTER_VALIDATE_RESOLUTION_KERAS{
        maxForks=4
        maxRetries    = 3
        memory = { 60.GB * task.attempt }
        time   = { 12.h   * task.attempt }
        errorStrategy = { task.attempt > 2 ? 'ignore' : 'retry' }
    }

    withName: CELLTYPIST{
        maxForks=7
    }

    withName: ASSESS_CALL_RATE{
        maxRetries    = 3
        memory = { 10.GB * task.attempt }
        errorStrategy = { task.attempt > 2 ? 'ignore' : 'retry' }
    }


    withName: CELLTYPE_FILE_MERGE{
        memory = { 60.GB * task.attempt }
    }

    withName: NORMALISE_AND_PCA{
        maxForks=7
        errorStrategy = 'retry'
        memory = { 50.GB * task.attempt}
        maxRetries    = 8
        cpus   = 4
    }
    
    withName: LISI{
        maxForks=7
        memory =300.GB
    }

    withName: RESOLVE_POOL_VCFS{
        cpus =  1
        memory = { 1.GB * task.attempt }
        time   = {  12.h   * task.attempt }
        maxRetries    = 3
    }

    withName: SPLIT_BATCH_H5AD{
        cpus =  1
        memory = { 25.GB * task.attempt * 0.5}
        time   = {  12.h   * task.attempt }
        maxRetries    = 3
    }

    withName: SUBSET_GENOTYPE{
        cpus =  1
        memory = { 1.GB * task.attempt }
        time   = {  12.h   * task.attempt }
        maxRetries    = 3
        maxForks = 20
    }

    withName: JOIN_STUDIES_MERGE{
        cpus =  1
        memory = { 20.GB * task.attempt }
        time   = {  12.h   * task.attempt }
        maxRetries    = 3
        maxForks = 20
    }    
    

    withName: GT_MATCH_POOL_AGAINST_PANEL{
        time   = { 2.h   * task.attempt }
        maxRetries    = 2
        maxForks = 20
    }

    withName: FREEBAYES{
        cpus =  1
        time   = {  12.h   * task.attempt }
        maxRetries    = 2
    }

    withName: VIREO_ADD_SAMPLE_PREFIX{
        cpus =  1
        memory = { 2.GB * task.attempt }
        time   = {  12.h   * task.attempt }
        maxRetries    = 3
    }


    withName: REPLACE_GT_DONOR_ID2{
        cpus =  1
        memory = { 1.GB * task.attempt }
        time   = 12.h
        maxRetries    = 3
    }

    withName: JOIN_CHROMOSOMES{
        cpus =  1
        memory = { 2.GB * task.attempt }
        time   = 12.h
        maxRetries    = 3
        maxForks = 20
    }

    withName: SERIALIZE_KNOWN_MARKERS{
        cpus =  1
        memory = { 1.GB * task.attempt }
        time   = {  12.h   * task.attempt }
        maxRetries    = 3
    }

    withName: OUTLIER_FILTER{
        errorStrategy = 'retry'
        memory = { 50.GB * task.attempt}
        maxRetries    = 8
    }

   

    withName: CLUSTER{
        cpus   = {  3     * task.attempt }
    }

    withName: LISI{
        maxForks=7
        errorStrategy = 'retry'
        maxRetries    = 8
        memory = { 200.GB * task.attempt}
    }

    withName: VIREO_GT_FIX_HEADER{
        errorStrategy = 'retry'
        maxRetries    = 4
        cpus = 1
        memory = { 1.GB * task.attempt }
    }


    withName: JOIN_CHROMOSOMES{
        errorStrategy = 'retry'
        maxRetries    = 4
    }

    withName: CLUSTER{
        errorStrategy = 'retry'
        maxRetries    = 4
    }


    withName: CONCORDANCE_CALCLULATIONS{
        cpus   = {  10     * task.attempt }
        time   = {  24.h   * task.attempt }
        memory = { 100.GB * task.attempt }
    }

    withName: CELLSNP{
        memory = { 5.GB * task.attempt }
    }

    withName: DYNAMIC_DONOR_EXCLUSIVE_SNP_SELECTION{
        cpus = 1
        time   = { 2.h   * task.attempt }
        memory = { 20.GB * task.attempt }
    }

    withName: PREP_COLLECTMETADATA{
        memory = { 150.MB * task.attempt }
    }

    withName: VIREO{
        //# maxForks=7
        cpus   = 5
        time   = { 12.h   * task.attempt }
        memory = { 70.GB * task.attempt }
    }
    withName: DSB_INTEGRATE{
        memory = { 200.GB * task.attempt }
        cpus   = {  4     * task.attempt }
        maxRetries    = 3
    }

    withName: MULTIMODAL_INTEGRATION{
        memory = { 200.GB * task.attempt }
        cpus   = {  4     * task.attempt }
        maxRetries    = 3
    }

    withName: UMAP_GATHER{
        memory = { 200.GB * task.attempt }
        errorStrategy = 'retry'
        maxRetries    = 3
    }

    withName: DOUBLET_FINDER{
        memory = { 45.GB * task.attempt }
    }

    
    withName: PLOT_PREDICTED_SEX{
        memory = { 50.GB * task.attempt }
        maxRetries = 5
        cpus = 1

    }

}


def trace_timestamp = new java.util.Date().format( 'yyyy-MM-dd_HH-mm-ss')
timeline {
    enabled = true
    file    = "${params.tracedir}/execution_timeline_${trace_timestamp}.html"
}
report {
    enabled = true
    file    = "${params.tracedir}/execution_report_${trace_timestamp}.html"
}
trace {
    enabled = true
    file    = "${params.tracedir}/execution_trace_${trace_timestamp}.txt"
}
dag {
    enabled = true
    file    = "${params.tracedir}/pipeline_dag_${trace_timestamp}.svg"
}

singularity {
  enabled = true
}