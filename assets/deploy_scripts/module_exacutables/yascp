#/bin/bash

SCRIPT_DIR=$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )
bold=$(tput bold)
normal=$(tput sgr0)

{
        (echo -e "$USER\0$0" > /dev/tcp/hgi-farm5/6192 2> /dev/null) &
} 2> /dev/null


if [[ "$QUEUE" == '' ]];
    then
        export QUEUE='oversubscribed'
    else
        export QUEUE="$QUEUE"
fi

echo "queue: $QUEUE"
echo "to change QUEUE please do export QUEUE='QUEUE OF INTEREST (normal?)'"
echo ''

if [[ $1 == "-v" || $1 == "-info" ||  $1 == "info" || $1 == "-h" ]]; then
    _=''
else
    
    echo press ENTER to NOT fetch containers, otherwise provide writable path:
    read varname
    if ["$varname" = ''];
        then
            export NXF_SINGULARITY_CACHEDIR='/software/hgi/containers/yascp'
            export SINGULARITY_DISABLE_CACHE=0
        else
            echo Yascp Will fetch the containers and place them in $varname
            export NXF_SINGULARITY_CACHEDIR=$varname
    fi
fi

BRANCH_NAME=$(git -C "$SCRIPT_DIR" rev-parse --abbrev-ref HEAD 2>/dev/null || echo "unknown")
COMMIT_HASH=$(git -C "$SCRIPT_DIR" rev-parse HEAD 2>/dev/null || echo "unknown")

if [[ $1 == "-v" ]]; then
    echo -e "yascp branch: $BRANCH_NAME\nAvailable at https://github.com/wtsi-hgi/yascp\ncommit: $COMMIT_HASH"
elif [[ $1 == "test" ]]; then
    command echo -e "Runing test code from OneK1k" && bash $SCRIPT_DIR/../bsub_test.sh "${@:2}"
elif [[ $1 == "sample_input" ]]; then
    command cp -r $SCRIPT_DIR/../../../sample_input ./
elif [[ $1 == "clean" ]]; then
    command echo -e "Removing work dir; after this you will not be able to use the catche to restart pipeline \n\n" && bash $SCRIPT_DIR/../bsub__removeWork.sh "${@:2}"
elif [[ $1 == "celltypes" ]]; then
    command echo -e "Running celltype assignment of provided h5ad file \n\n" && bash $SCRIPT_DIR/../bsub_test_celltypes.sh "${@:2}"
elif [[ $1 == "doublets" ]]; then
    command echo -e "Running doublet assignment of provided matrix files \n\n" && bash $SCRIPT_DIR/../bsub_test_doublets.sh "${@:2}"
elif [[ $1 == "cluster" ]]; then
    command echo -e "Running clustering assesment of provided h5ad file \n\n" && bash $SCRIPT_DIR/../bsub_test_recluster.sh "${@:2}"
elif [[ $1 == "cellbender" ]]; then
    command echo -e "Running clustering assesment of provided h5ad file \n\n" && bash $SCRIPT_DIR/../bsub_test_cellbender.sh "${@:2}"
elif [[ $1 == "-info" ]]; then
    command cat "${SCRIPT_DIR}/help.info" | sed "s/\${bold}/$(echo -e "\033[1m")/g; s/\${normal}/$(echo -e "\033[0m")/g"
elif [[ $1 == "info" ]]; then
    echo -e "yascp branch: $BRANCH_NAME\nAvailable at https://github.com/wtsi-hgi/yascp\ncommit: $COMMIT_HASH"
    command cat "${SCRIPT_DIR}/help.info" | sed "s/\${bold}/$(echo -e "\033[1m")/g; s/\${normal}/$(echo -e "\033[0m")/g"
elif [[ $1 == "-h" ]]; then
    echo -e "yascp branch: $BRANCH_NAME\nAvailable at https://github.com/wtsi-hgi/yascp\ncommit: $COMMIT_HASH"
    command cat "${SCRIPT_DIR}/help.info" | sed "s/\${bold}/$(echo -e "\033[1m")/g; s/\${normal}/$(echo -e "\033[0m")/g"
elif [[ $1 == "fetch" ]]; then
    command echo -e "if you have prepeared an input.tsv file with a header 'sanger_sample_id' that lists all the unique sanger sample ids to retrieve then this will be now fetched. \n" && bash /software/hgi/pipelines/yascp_nf_irods_to_lustre_versions/yascp_nf_irods_to_lustre_1.1/scripts/bsub_module.sh  "${@:2}"
else
    command bash $SCRIPT_DIR/../bsub.sh "$@"
fi